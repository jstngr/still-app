{"version":3,"file":"686.js","mappings":"2LAEO,MAAMA,UAAiB,KAC1B,gBAAMC,GACFC,QAAQC,IAAI,aAChB,CACA,kCAAMC,GACFF,QAAQC,IAAI,+BAChB,CACA,iCAAME,GACF,MAAO,CACHC,OAAQ,aAEhB,CACA,wBAAMC,CAAmBC,GAErB,OADAN,QAAQC,IAAI,qBAAsBK,GAC3B,CACHF,OAAQ,IAAmBG,SAC3BC,wBAAwB,EAEhC,CACA,qBAAMC,GAEF,OADAT,QAAQC,IAAI,mBACL,CACHG,OAAQ,IAAmBG,SAEnC,CACA,sBAAMG,GACFV,QAAQC,IAAI,mBAChB,CACA,yBAAMU,CAAoBL,GACtBN,QAAQC,IAAI,sBAAuBK,EACvC,CACA,0BAAMM,CAAqBN,GACvBN,QAAQC,IAAI,uBAAwBK,EACxC,CACA,gBAAMO,CAAWP,GACbN,QAAQC,IAAI,aAAcK,EAC9B,CAEA,gBAAMQ,GACFd,QAAQC,IAAI,aAChB,CAEA,kBAAMc,GACFf,QAAQC,IAAI,eAChB,CAEA,kBAAMe,GACFhB,QAAQC,IAAI,eAChB,CACA,yBAAMgB,CAAoBX,GAEtB,OADAN,QAAQC,IAAI,sBAAuBK,GAC5B,CACHY,SAAUZ,EAAQa,KAE1B,CACA,sBAAMC,GACFpB,QAAQC,IAAI,mBAChB,CACA,0BAAMoB,CAAqBf,GAEvB,OADAN,QAAQC,IAAIK,GACL,CACHY,SAAUZ,EAAQa,KAE1B,CACA,uBAAMG,GACF,MAAO,CACHC,KAAM,GACNC,OAAQ,EAEhB,CACA,iCAAMC,CAA4BnB,GAE9B,OADAN,QAAQC,IAAIK,GACL,CACHY,SAAUZ,EAAQa,KAE1B,CACA,8BAAMO,GACF,MAAO,CACHH,KAAM,GACNC,OAAQ,EAEhB,E","sources":["webpack://Feed and Sleep/./node_modules/@capacitor-community/admob/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { AdmobConsentStatus } from './consent/consent-status.enum';\nexport class AdMobWeb extends WebPlugin {\n    async initialize() {\n        console.log('initialize');\n    }\n    async requestTrackingAuthorization() {\n        console.log('requestTrackingAuthorization');\n    }\n    async trackingAuthorizationStatus() {\n        return {\n            status: 'authorized',\n        };\n    }\n    async requestConsentInfo(options) {\n        console.log('requestConsentInfo', options);\n        return {\n            status: AdmobConsentStatus.REQUIRED,\n            isConsentFormAvailable: true,\n        };\n    }\n    async showConsentForm() {\n        console.log('showConsentForm');\n        return {\n            status: AdmobConsentStatus.REQUIRED,\n        };\n    }\n    async resetConsentInfo() {\n        console.log('resetConsentInfo');\n    }\n    async setApplicationMuted(options) {\n        console.log('setApplicationMuted', options);\n    }\n    async setApplicationVolume(options) {\n        console.log('setApplicationVolume', options);\n    }\n    async showBanner(options) {\n        console.log('showBanner', options);\n    }\n    // Hide the banner, remove it from screen, but can show it later\n    async hideBanner() {\n        console.log('hideBanner');\n    }\n    // Resume the banner, show it after hide\n    async resumeBanner() {\n        console.log('resumeBanner');\n    }\n    // Destroy the banner, remove it from screen.\n    async removeBanner() {\n        console.log('removeBanner');\n    }\n    async prepareInterstitial(options) {\n        console.log('prepareInterstitial', options);\n        return {\n            adUnitId: options.adId,\n        };\n    }\n    async showInterstitial() {\n        console.log('showInterstitial');\n    }\n    async prepareRewardVideoAd(options) {\n        console.log(options);\n        return {\n            adUnitId: options.adId,\n        };\n    }\n    async showRewardVideoAd() {\n        return {\n            type: '',\n            amount: 0,\n        };\n    }\n    async prepareRewardInterstitialAd(options) {\n        console.log(options);\n        return {\n            adUnitId: options.adId,\n        };\n    }\n    async showRewardInterstitialAd() {\n        return {\n            type: '',\n            amount: 0,\n        };\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["AdMobWeb","initialize","console","log","requestTrackingAuthorization","trackingAuthorizationStatus","status","requestConsentInfo","options","REQUIRED","isConsentFormAvailable","showConsentForm","resetConsentInfo","setApplicationMuted","setApplicationVolume","showBanner","hideBanner","resumeBanner","removeBanner","prepareInterstitial","adUnitId","adId","showInterstitial","prepareRewardVideoAd","showRewardVideoAd","type","amount","prepareRewardInterstitialAd","showRewardInterstitialAd"],"sourceRoot":""}