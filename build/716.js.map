{"version":3,"file":"716.js","mappings":"qLACO,MAAMA,UAAqB,KAC9B,WAAAC,GACIC,SAASC,WACTC,KAAKC,SAAW,KAChBD,KAAKE,aAAoC,oBAAdC,WAA6B,aAAcA,UACtEH,KAAKI,uBAAyB,KACO,YAA7BC,SAASC,iBACTN,KAAKO,WAAW,CAE5B,CACA,eAAMA,GACGP,KAAKE,cACNF,KAAKQ,wBAELR,KAAKC,gBACCD,KAAKS,aAEfT,KAAKC,eAAiBE,UAAUF,SAASS,QAAQ,UACjDL,SAASM,iBAAiB,mBAAoBX,KAAKI,wBACnDC,SAASM,iBAAiB,mBAAoBX,KAAKI,uBACvD,CACA,gBAAMK,GACF,IAAIG,EACCZ,KAAKE,cACNF,KAAKQ,wBAEgB,QAAxBI,EAAKZ,KAAKC,gBAA6B,IAAPW,GAAyBA,EAAGC,UAC7Db,KAAKC,SAAW,KAChBI,SAASS,oBAAoB,mBAAoBd,KAAKI,wBACtDC,SAASS,oBAAoB,mBAAoBd,KAAKI,uBAC1D,CACA,iBAAMW,GAIF,MAHe,CACXA,YAAaf,KAAKE,aAG1B,CACA,iBAAMc,GAOF,OANKhB,KAAKE,cACNF,KAAKQ,wBAEM,CACXQ,cAAehB,KAAKC,SAG5B,CACA,qBAAAO,GACI,MAAMR,KAAKiB,YAAY,sDAC3B,E","sources":["webpack://Feed and Sleep/./node_modules/@capacitor-community/keep-awake/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\nexport class KeepAwakeWeb extends WebPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.wakeLock = null;\r\n        this._isSupported = typeof navigator !== 'undefined' && 'wakeLock' in navigator;\r\n        this.handleVisibilityChange = () => {\r\n            if (document.visibilityState === 'visible')\r\n                this.keepAwake();\r\n        };\r\n    }\r\n    async keepAwake() {\r\n        if (!this._isSupported) {\r\n            this.throwUnsupportedError();\r\n        }\r\n        if (this.wakeLock) {\r\n            await this.allowSleep();\r\n        }\r\n        this.wakeLock = await navigator.wakeLock.request('screen');\r\n        document.addEventListener('visibilitychange', this.handleVisibilityChange);\r\n        document.addEventListener('fullscreenchange', this.handleVisibilityChange);\r\n    }\r\n    async allowSleep() {\r\n        var _a;\r\n        if (!this._isSupported) {\r\n            this.throwUnsupportedError();\r\n        }\r\n        (_a = this.wakeLock) === null || _a === void 0 ? void 0 : _a.release();\r\n        this.wakeLock = null;\r\n        document.removeEventListener('visibilitychange', this.handleVisibilityChange);\r\n        document.removeEventListener('fullscreenchange', this.handleVisibilityChange);\r\n    }\r\n    async isSupported() {\r\n        const result = {\r\n            isSupported: this._isSupported,\r\n        };\r\n        return result;\r\n    }\r\n    async isKeptAwake() {\r\n        if (!this._isSupported) {\r\n            this.throwUnsupportedError();\r\n        }\r\n        const result = {\r\n            isKeptAwake: !!this.wakeLock,\r\n        };\r\n        return result;\r\n    }\r\n    throwUnsupportedError() {\r\n        throw this.unavailable('Screen Wake Lock API not available in this browser.');\r\n    }\r\n}\r\n//# sourceMappingURL=web.js.map"],"names":["KeepAwakeWeb","constructor","super","arguments","this","wakeLock","_isSupported","navigator","handleVisibilityChange","document","visibilityState","keepAwake","throwUnsupportedError","allowSleep","request","addEventListener","_a","release","removeEventListener","isSupported","isKeptAwake","unavailable"],"sourceRoot":""}